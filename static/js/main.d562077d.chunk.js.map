{"version":3,"sources":["styles/styles.js","components/Header/Header.jsx","App.jsx","index.js"],"names":["fonts","colors","dark","darker","light","lighter","highlight","selected","Header","initialSelectedLink","logoChars","navLinks","setBurgerIsOpen","useState","burgerIsSelected","setBurgerIsSelected","burgerClass","setBurgerClass","pathName","window","matchMedia","matches","location","pathname","slice","replace","forEach","navLink","selectedLink","setSelectedLink","headerStyle","display","justifyContent","alignItems","padding","height","position","boxSizing","background","width","logoStyle","color","fontFamily","textDecoration","navLinkStyle","whiteSpace","selectedNavLinkStyle","burgerBarStyle","useEffect","className","style","to","onClick","onTouchStart","document","querySelector","click","map","i","thisStyle","key","flexDirection","App","setShowBurgerMenu","ReactDOM","render","StrictMode","getElementById"],"mappings":"4MAAaA,EACL,yBADKA,EAGL,qBAGKC,EACC,CACVC,KAAM,UACNC,OAAQ,UACRC,MAAO,UACPC,QAAS,UACTC,UAAW,sBANFL,EASL,CACJG,MAAO,UACPF,KAAM,UACNC,OAAQ,UACRG,UAAW,UACXC,SAAU,W,MCfC,SAASC,EAAT,GAIX,IAUCC,EAVF,IAHFC,iBAGE,MAHU,GAGV,MAFFC,gBAEE,MAFS,GAET,MADFC,uBACE,MADgB,aAChB,EAEF,EAAgDC,oBAAS,GAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAKMC,GAHeC,OAAOC,WAAW,sBAAsBC,QAG5CF,OAAOG,SAASC,SAASC,MAAM,GAAGC,QAAQ,MAAO,MAIlD,KAAbP,IACFT,EAAsBE,EAAS,IAGhCA,EAASe,SAAQ,SAAAC,GACbT,IAAaS,IACflB,EAAsBkB,MAIxB,MAAwCd,mBAASJ,GAAjD,mBAAOmB,EAAP,KAAqBC,EAArB,KAGMC,EAAc,CACnBC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,QAAS,YACTC,OAAQ,OACRC,SAAU,WACVC,UAAW,aACXC,WAAYrC,EAAkBC,KAC9BqC,MAAO,QAGFC,EAAY,CACjBC,MAAOxC,EAAYG,MACnBsC,WAAY1C,EACZ2C,eAAgB,QAQXC,EAAe,CACpBH,MAAOxC,EAAYG,MACnBsC,WAAY1C,EACZ2C,eAAgB,OAChBE,WAAY,UAGPC,EAAoB,2BACtBF,GADsB,IAEzBH,MAAOxC,EAAYM,WAUdwC,EAAiB,CACtBZ,OAAQ,MACRG,WAAYrC,EAAkBG,OAoC/B,OALA4C,qBAAU,WAlBT/B,EAmBkBH,EArBU,kBAAoB,MAsB9C,CAACA,IAIH,4BAAQmC,UAAU,SAASC,MAAOpB,GAC/B,kBAAC,IAAD,CACAqB,GAAG,IACHF,UAAU,YACVC,MAAOV,EACPY,QApBJ,WACCvB,EAAgBlB,EAAS,KAoBtB0C,aA3BJ,WACgBC,SAASC,cAAc,cAE7BC,UAwBsB9C,GAE7B,yBAAKuC,UAAU,aAAaC,MAvEd,CACdX,MAAO,OACPP,eAAgB,aAuEdrB,EAAS8C,KAAI,SAAC9B,EAAS+B,GACtB,IAAMC,EAAahC,IAAYC,EAAgBkB,EAAuBF,EAEtE,OAAO,kBAAC,IAAD,CACNO,GAAIxB,EACJsB,UAAU,WACVW,IAAG,mBAAcF,GACjBR,MAAOS,EACPP,QAAS,WA5BfvB,EA4BiCF,KAAWA,OAK1C,yBAAKsB,UAAS,iBAAYjC,GAAekC,MArExB,CACnBW,cAAe,SACf7B,eAAgB,gBAChBO,MAAO,OACLJ,OAAQ,QAiEqDkB,aAxDhE,WACC,IAAM9C,GAAYO,EAClBC,EAAoBR,GACpBK,EAAgBL,KAsDb,yBAAK0C,UAAU,aAAaC,MAAOH,IACnC,yBAAKE,UAAU,aAAaC,MAAOH,IACnC,yBAAKE,UAAU,aAAaC,MAAOH,MClIzB,SAASe,IACtB,IAKA,EAA4CjD,oBAAS,GAArD,mBAAuBkD,GAAvB,WAeA,OACE,kBAAC,EAAD,CAAQrD,UArBQ,OAqBcC,SApBf,CAAC,OAAQ,mBAAoB,WAAY,WAoBNC,gBAAiBmD,ICpBvEC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAACJ,EAAD,OAEJR,SAASa,eAAe,U","file":"static/js/main.d562077d.chunk.js","sourcesContent":["export const fonts = {\r\n  logo: 'Medula One, sans-serif',\r\n  head: 'Source Code Pro, sans-serif',\r\n  body: 'Mulish, sans-serif', \r\n};\r\n\r\nexport const colors = {\r\n  background: {\r\n    dark: '#676565',\r\n    darker: '#333333', \r\n    light: '#C4C4C4',\r\n    lighter: '#DFDFDF',\r\n    highlight: 'rgb(0, 7, 67, 0.4)',\r\n  },\r\n\r\n  font: {\r\n    light: '#FFFFFF',\r\n    dark: '#DBD9D9',\r\n    darker: '#4D4D4D',\r\n    highlight: '#FF5050',\r\n    selected: '#0edfff',\r\n  }\r\n};","import React, { useEffect, useState } from 'react';  \r\nimport { Link } from 'react-router-dom';\r\nimport { colors, fonts } from './../../styles/styles.js';\r\nimport './Header.css';\r\n\r\nexport default function Header({\r\n\tlogoChars = \"\", \r\n\tnavLinks = [], \r\n\tsetBurgerIsOpen = () => {},\r\n}) { \r\n\t// ====================================================== Consts ======================================================== //\r\n\tconst [burgerIsSelected, setBurgerIsSelected] = useState(false);\r\n\tconst [burgerClass, setBurgerClass] = useState('');\r\n \r\n\tconst desktopMatch = window.matchMedia('(min-width: 426px)').matches; \r\n\tconst phoneMatch = !desktopMatch;\r\n \r\n\tconst pathName = window.location.pathname.slice(1).replace('%20', ' '); \r\n\r\n\tlet initialSelectedLink;\r\n\r\n\tif(pathName === '') {\r\n\t\tinitialSelectedLink = navLinks[0];\r\n\t}\r\n\r\n\tnavLinks.forEach(navLink => { \r\n\t\tif(pathName === navLink) {\r\n\t\t\tinitialSelectedLink = navLink;\r\n\t\t}\r\n\t})\r\n\r\n\tconst [selectedLink, setSelectedLink] = useState(initialSelectedLink); \r\n\r\n\t// ====================================================== Styles ======================================================== //\r\n\tconst headerStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: 'space-between',\r\n\t\talignItems: 'center',  \r\n\t\tpadding: '45px 32px',\r\n\t\theight: '64px',\r\n\t\tposition: 'relative', \r\n\t\tboxSizing: 'border-box',\r\n\t\tbackground: colors.background.dark,\r\n\t\twidth: '100%', \r\n\t};\r\n\r\n\tconst logoStyle = {\r\n\t\tcolor: colors.font.light,\r\n\t\tfontFamily: fonts.logo, \r\n\t\ttextDecoration: 'none',\r\n\t};\r\n\r\n\tconst navStyle = { \r\n    width: '100%',\r\n    justifyContent: 'flex-end',\r\n\t};\r\n\r\n\tconst navLinkStyle = {\r\n\t\tcolor: colors.font.light,\r\n\t\tfontFamily: fonts.body, \r\n\t\ttextDecoration: 'none',\r\n\t\twhiteSpace: 'nowrap', \r\n\t};\r\n\r\n\tconst selectedNavLinkStyle = {\r\n\t\t...navLinkStyle,\r\n\t\tcolor: colors.font.selected,\r\n\t};\r\n\r\n\tconst burgerStyle = {  \r\n\t\tflexDirection: 'column', \r\n\t\tjustifyContent: 'space-between',\r\n\t\twidth: '75px',\r\n    height: '53px',\r\n\t};\r\n\r\n\tconst burgerBarStyle = {\r\n\t\theight: '25%',\r\n\t\tbackground: colors.background.light,\r\n\t};\r\n\r\n\t// ====================================================== Event Handlers =============================================== //\r\n\tfunction onTouchBurger() { \r\n\t\tconst selected = !burgerIsSelected; \r\n\t\tsetBurgerIsSelected(selected)\r\n\t\tsetBurgerIsOpen(selected)\r\n\t}\r\n\r\n\tfunction updateBurgerClass(selected) {\r\n\t\tconst newClass = selected ? 'burger-selected' : '';\r\n\r\n\t\tsetBurgerClass(newClass)\r\n\t}\r\n\r\n\tfunction onTouchLogo() {\r\n\t\tconst target = document.querySelector('.text-logo'); \r\n\t\t\r\n    target.click()\r\n\t}\r\n\r\n\tfunction onClickLogo() {\r\n\t\tsetSelectedLink(navLinks[0])\r\n\t}\r\n\r\n\tfunction onClickLink(link) { \r\n\t\tsetSelectedLink(link)\r\n\t}\r\n\r\n\t// ====================================================== Listen / Trigger ============================================= //\r\n\tuseEffect(() => {\r\n\t\tupdateBurgerClass(burgerIsSelected)\r\n\t}, [burgerIsSelected])\r\n\r\n\t// ====================================================== Output  ====================================================== //\r\n\treturn (\r\n\t\t<header className=\"header\" style={headerStyle}>\r\n\t\t \t\t<Link \r\n\t\t\t\t\tto=\"/\" \r\n\t\t\t\t\tclassName=\"text-logo\" \r\n\t\t\t\t\tstyle={logoStyle} \r\n\t\t\t\t\tonClick={onClickLogo}\r\n\t\t\t\t\tonTouchStart={onTouchLogo}>{logoChars}</Link>\r\n\t\r\n\t\t\t\t<nav className=\"header-nav\" style={navStyle}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tnavLinks.map((navLink, i) => {\r\n\t\t\t\t\t\t\tconst thisStyle = (navLink === selectedLink) ? selectedNavLinkStyle : navLinkStyle; \r\n\t\r\n\t\t\t\t\t\t\treturn <Link \r\n\t\t\t\t\t\t\t\tto={navLink} \r\n\t\t\t\t\t\t\t\tclassName=\"nav-link\" \r\n\t\t\t\t\t\t\t\tkey={`nav-link-${i}`} \r\n\t\t\t\t\t\t\t\tstyle={thisStyle}\r\n\t\t\t\t\t\t\t\tonClick={() => onClickLink(navLink)}>{navLink}</Link>\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</nav>\r\n\t\t\t\r\n\t\t\t\t<div className={`burger ${burgerClass}`} style={burgerStyle} onTouchStart={onTouchBurger}>\r\n\t\t\t\t\t<div className=\"burger-bar\" style={burgerBarStyle}></div>\r\n\t\t\t\t\t<div className=\"burger-bar\" style={burgerBarStyle}></div>\r\n\t\t\t\t\t<div className=\"burger-bar\" style={burgerBarStyle}></div>\r\n\t\t\t\t</div>  \r\n\t\t\t</header>\r\n\t)\r\n\t// return (\r\n\t// \t<header className=\"header\" style={headerStyle}>\r\n\t// \t\t<p>Header</p>\r\n\t// \t\t{/* <Link \r\n\t// \t\t\tto=\"/\" \r\n\t// \t\t\tclassName=\"text-logo\" \r\n\t// \t\t\tstyle={logoStyle} \r\n\t// \t\t\tonClick={onClickLogo}\r\n\t// \t\t\tonTouchStart={onTouchLogo}>{logoChars}</Link>\r\n\r\n\t// \t\t<nav className=\"header-nav\" style={navStyle}>\r\n\t// \t\t\t{\r\n\t// \t\t\t\tnavLinks.map((navLink, i) => {\r\n\t// \t\t\t\t\tconst thisStyle = (navLink === selectedLink) ? selectedNavLinkStyle : navLinkStyle; \r\n\r\n\t// \t\t\t\t\treturn <Link \r\n\t// \t\t\t\t\t\tto={navLink} \r\n\t// \t\t\t\t\t\tclassName=\"nav-link\" \r\n\t// \t\t\t\t\t\tkey={`nav-link-${i}`} \r\n\t// \t\t\t\t\t\tstyle={thisStyle}\r\n\t// \t\t\t\t\t\tonClick={() => onClickLink(navLink)}>{navLink}</Link>\r\n\t// \t\t\t\t})\r\n\t// \t\t\t}\r\n\t// \t\t</nav>\r\n\t\t\r\n\t// \t\t<div className={`burger ${burgerClass}`} style={burgerStyle} onTouchStart={onTouchBurger}>\r\n\t// \t\t\t<div className=\"burger-bar\" style={burgerBarStyle}></div>\r\n\t// \t\t\t<div className=\"burger-bar\" style={burgerBarStyle}></div>\r\n\t// \t\t\t<div className=\"burger-bar\" style={burgerBarStyle}></div>\r\n\t// \t\t</div>  */}\r\n\t// \t</header>\r\n\t// )\r\n}","import React, { useState } from \"react\";\r\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport Header from './components/Header/Header.jsx';\r\n// import Home from './pages/Home/Home.jsx';\r\n// import TechnicalSkills from './pages/TechnicalSkills/TechnicalSkills.jsx';\r\n// import Projects  from \"./pages/Projects/Projects.jsx\";\r\n// import Contact from './pages/Contact/Contact.jsx';\r\n// import BurgerMenu from \"./components/BurgerMenu/BurgerMenu.jsx\";\r\n// import { data } from './../src/data/technicalSkillsData.js';\r\n// import { useState } from \"react/cjs/react.development\";\r\n\r\nexport default function App() {\r\n  const logoChars = 'ASWD';\r\n  const navLinks = ['Home', 'Technical Skills', 'Projects', 'Contact'];\r\n  \r\n  const myProjects = [<div className=\"project\" key=\"project-1\">Project-1</div>, <div className=\"project\" key=\"project-2\">Project-2</div>];\r\n  \r\n  const [showBurgerMenu, setShowBurgerMenu] = useState(false);\r\n\r\n  const appStyle = {  \r\n    position: 'absolute',\r\n    width: '100%',\r\n    minHeight: '100%',\r\n    minWidth: '250px', \r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  };\r\n\r\n  function onTouchBurgerLink(link) {\r\n    setShowBurgerMenu(false) \r\n  } \r\n\r\n  return ( \r\n    <Header logoChars={logoChars} navLinks={navLinks} setBurgerIsOpen={setShowBurgerMenu}/> \r\n  )\r\n}\r\n\r\n /* <section className=\"app\" style={appStyle}>\r\n      <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\"/>\r\n      <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin/>\r\n      <link href=\"https://fonts.googleapis.com/css2?family=Medula+One&display=swap\" rel=\"stylesheet\"/> \r\n      <link href=\"https://fonts.googleapis.com/css2?family=Medula+One&display=swap\" rel=\"stylesheet\"/>\r\n      <link href=\"https://fonts.googleapis.com/css2?family=Source+Code+Pro:wght@500&display=swap\" rel=\"stylesheet\"/> \r\n\r\n        <BrowserRouter>  \r\n        <Header logoChars={logoChars} navLinks={navLinks} setBurgerIsOpen={setShowBurgerMenu}/>\r\n        \r\n        <BurgerMenu links={navLinks} show={showBurgerMenu} handleTouch={onTouchBurgerLink}/>\r\n\r\n        {\r\n          !showBurgerMenu && \r\n          <Routes>\r\n            <Route exact path=\"/\" element={<Home/>}/>\r\n            <Route exact path=\"/Home\" element={<Home/>}/>\r\n            <Route exact path=\"/Technical%20Skills\" element={<TechnicalSkills data={data}/>}/>\r\n            <Route exact path=\"/Projects\" element={<Projects projs={myProjects}/>}/>\r\n            <Route exact path=\"/Contact\" element={<Contact/>}/>\r\n          </Routes> \r\n        }  \r\n        \r\n      </BrowserRouter> \r\n    </section>*/","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\n\r\n// console.log('loaded index.js')\r\n// var root = document.querySelector(\"#root\");\r\n// ReactDOM.render(\r\n// \t<div>\r\n//         <p>Hello world - App loaded</p>\r\n// \t</div>,\r\n// \troot\r\n// );\r\n\r\nReactDOM.render(\r\n    <React.StrictMode> \r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n)\r\n\r\n// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import Piano from \"./PianoApp.jsx\";\r\n\r\n// var root = document.querySelector(\"#root\");\r\n\r\n// ReactDOM.render(\r\n// \t<>\r\n// \t\t<Piano/>\r\n// \t</>,\r\n// \troot\r\n// );"],"sourceRoot":""}